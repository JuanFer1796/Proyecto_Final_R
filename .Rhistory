v<-125
v
load("~/UVG 3-5/3 primer semestre/Data mining/.RData")
setwd("~/GitHub/Proyecto_Final_R"
library(tidyverse)
library(psych)
library(ggthemes)
train <- read.csv("train.csv", stringsAsFactors = TRUE)
test <- read.csv("test.csv", stringsAsFactors = TRUE)
setwd("D:/Google Drive/UVG/V Semestre/Data Mining/Proyecto 1/Proyecto_Final_R")
setwd("~/GitHub/Proyecto_Final_R")
train <- read.csv("train.csv", stringsAsFactors = TRUE)
test <- read.csv("test.csv", stringsAsFactors = TRUE)
train <- train %>%
mutate(MSSubClass = as.factor(MSSubClass))
library(tidyverse)
library(psych)
library(ggthemes)
train <- train %>%
mutate(MSSubClass = as.factor(MSSubClass))
test <- test %>%
mutate(MSSubClass = as.factor(MSSubClass))
a=1
b=2
a+b
train_numericas <- train[,sapply(train, is.numeric)]
multi.hist(train_numericas, global = FALSE)
vector_continuas_numericas <- c(2:3,8:14,16,27:29,37)
train_continuas_numericas <- train_numericas[,vector_continuas_numericas]
multi.hist(train_continuas_numericas, global = FALSE, bcol = 'pink')
vector_discretas_numericas <- c(4:7,17:26,35:36)
train_discretas_numericas <- train_numericas[,vector_discretas_numericas]
par(mfrow=c(4,4))
for(c in colnames(train_discretas_numericas)) {
barplot(table(train_discretas_numericas[, c]))
}
ordinal_condition <- function(col) {
ifelse(col == "Po", 1,
ifelse(col == "Fa", 2,
ifelse(col == "TA", 3,
ifelse(col == "Gd", 4,
ifelse(col == "Ex", 5, NA)))))
}
bsmt_condition <- function(col) {
ifelse(col == "LwQ", 1,
ifelse(col == "Rec", 2,
ifelse(col == "BLQ", 3,
ifelse(col == "ALQ", 4,
ifelse(col == "GLQ", 5, NA)))))
}
#Limpieza de datos
transform_ordinal <- function(df) {
df %>%
mutate(LotShape = sapply(LotShape, switch,
"Reg" = 0,
"Slightly irregular" = 0,
"Moderately Irregular" = 1,
"Irregular" = 1),
LandSlope = sapply(LandSlope, switch,
"Gtl" = 0,
"Mod"  = 1,
"Sev" = 1),
ExterQual = ordinal_condition(ExterQual),
ExterCond = ordinal_condition(ExterCond),
BsmtQual = ordinal_condition(BsmtQual),
BsmtCond = ordinal_condition(BsmtCond),
BsmtExposure = ifelse(BsmtExposure == "No", 1,
ifelse(BsmtExposure == "Mn", 2,
ifelse(BsmtExposure == "Av", 3,
ifelse(BsmtExposure == "Gd", 4, NA)))),
BsmtFinType1 = bsmt_condition(BsmtFinType1),
BsmtFinType2 = bsmt_condition(BsmtFinType2),
HeatingQC = ordinal_condition(HeatingQC),
KitchenQual = ordinal_condition(KitchenQual),
Functional = sapply(Functional, switch,
"Typ" = 1,
"Min1" = 2,
"Min2" = 2,
"Mod" = 2,
"Maj1" = 3,
"Maj2" = 3,
"Sev" = 3,
"Sal" = 3),
FireplaceQu = ordinal_condition(FireplaceQu),
GarageFinish = ifelse(GarageFinish == "Unf", 1,
ifelse(GarageFinish == "RFn", 2,
ifelse(GarageFinish == "Fin", 3, NA))),
GarageQual = ordinal_condition(GarageQual),
GarageCond = ordinal_condition(GarageCond))
}
train <- transform_ordinal(train)
test <- transform_ordinal(test)
combine_cols <- function(df) {
df %>%
mutate(BsmtFinSF = BsmtFinSF1 + BsmtFinSF2,
Porch = OpenPorchSF + EnclosedPorch + X3SsnPorch + ScreenPorch) %>%
select(-Id, -Utilities, -BsmtFinSF1, -BsmtFinSF2, -PoolQC, -OpenPorchSF, -EnclosedPorch, -X3SsnPorch, -ScreenPorch)
}
train <- combine_cols(train)
test <- combine_cols(test)
bool_transform <- function(df) {
df %>%
mutate(Street = ifelse(Street == "Grvl",1,
ifelse(Street== "Pave", 0, NA)),
Alley= ifelse(Alley== "Grvl",1,
ifelse(Alley== "Pave", 0, NA)),
PoolArea= ifelse(PoolArea!=0, 1,
ifelse(PoolArea==0, 0, NA))
)
}
train <- bool_transform(train)
test <- bool_transform(test)
str(train)
str(test)
train2 <- read.csv("train.csv", stringsAsFactors = TRUE)
test2 <- read.csv("test.csv", stringsAsFactors = TRUE)
str(test)
View(test2)
rm(test2)
rm(train2)
str(train)
table(train$HouseStyle, train$Neighborhood)
table(train$HouseStyle, train$SaleType)
bool_transform <- function(df) {
df %>%
mutate(Street = ifelse(Street == "Grvl",1,
ifelse(Street== "Pave", 0, NA)),
Alley= ifelse(Alley== "Grvl",1,
ifelse(Alley== "Pave", 0, NA)),
CentralAir= ifelse(CentralAir=="Y",
ifelse(CentralAir=="N", NA)),
PoolArea= ifelse(PoolArea!=0, 1,
ifelse(PoolArea==0, 0, NA)),
Miscval= ifelse(Miscval!=0, 1,
ifelse(Miscval==0, 0, NA))
)
}
train <- bool_transform(train)
test <- bool_transform(test)
bool_transform <- function(df) {
df %>%
mutate(Street = ifelse(Street == "Grvl",1,
ifelse(Street== "Pave", 0, NA)),
Alley= ifelse(Alley== "Grvl",1,
ifelse(Alley== "Pave", 0, NA)),
CentralAir= ifelse(CentralAir=="Y", 1,
ifelse(CentralAir=="N",0, NA)),
PoolArea= ifelse(PoolArea!=0, 1,
ifelse(PoolArea==0, 0, NA)),
Miscval= ifelse(Miscval!=0, 1,
ifelse(Miscval==0, 0, NA))
)
}
train <- bool_transform(train)
test <- bool_transform(test)
bool_transform <- function(df) {
df %>%
mutate(Street = ifelse(Street == "Grvl",1,
ifelse(Street== "Pave", 0, NA)),
Alley= ifelse(Alley== "Grvl",1,
ifelse(Alley== "Pave", 0, NA)),
CentralAir= ifelse(CentralAir=="Y", 1,
ifelse(CentralAir=="N",0, NA)),
PoolArea= ifelse(PoolArea!=0, 1,
ifelse(PoolArea==0, 0, NA)),
Miscval= ifelse(MiscVal!=0, 1,
ifelse(MiscVal==0, 0, NA))
)
}
train <- bool_transform(train)
test <- bool_transform(test)
str(train)
train <- bool_transform(train)
test <- bool_transform(test)
str(train)
train$MiscVal
bool_transform <- function(df) {
df %>%
mutate(Street = ifelse(Street == "Grvl",1,
ifelse(Street== "Pave", 0, NA)),
Alley= ifelse(Alley== "Grvl",1,
ifelse(Alley== "Pave", 0, NA)),
CentralAir= ifelse(CentralAir=="Y", 1,
ifelse(CentralAir=="N",0, NA)),
PoolArea= ifelse(PoolArea!=0, 1,
ifelse(PoolArea==0, 0, NA)),
MiscVal= ifelse(MiscVal!=0, 1,
ifelse(MiscVal==0, 0, NA))
)
train$Miscval
train$MiscVal
train <- bool_transform(train)
1+1
